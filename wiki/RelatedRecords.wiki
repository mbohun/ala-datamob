#summary related records proposal

<table width="98%" border="0" cellpadding="10"><tr>

<td valign="top" width="*">


= Summary of the related records proposal =


== Introduction ==

This document [http://code.google.com/p/ala-datamob/RelatedRecords] is a draft proposal for handling relationships between data records. The intent of this proposal is to ensure the data standards and best-practice support communicating these relationships if the source data capture them.

*At 05/12/2011 this document is still in draft form* first release for peer review; it supersedes (and subsumes) the earlier [IdentifyingRelatedRecords] document, also on this wiki.


== Relevance ==

This document applies to some of the entities represented in biological collection data (_i.e._ collection items), with a focus on associations amongst specimen (or sighting) records, along with duplicates, other evidential data, or rich content (_i.e._ multimedia). 

It is a retrospective analysis of two commonly-used specifications for biodiversity informatics data transfer: DarwinCore (2.x) and HISPID (5). ABCD (2) is indirectly referenced, of which HISPID5 is implemented as an extension.

The HISPID specific use-cases may conflict with ABCD-usage; an attempt may be made in the future to highlight these, but at the moment the reader should be cautious of this possibility.

See _About the data_ and _Appendix: Relevance to different biodiversity domains_ for more information.


== Requirements ==

Note: _the following are prioritised using [http://en.wikipedia.org/wiki/MoSCoW_Method MoSCoW - http://en.wikipedia.org/wiki/MoSCoW_Method]_


=== General (functional) behaviour required of the collection management system ===
  # Each record that is to be shared must have a consistent and predictable unique identifier. The record will most likely represent a collection item, but may also represent other related entities, such as the collector, a location or a site visit;
  # This identifier is to be set by the data custodian, in accordance with a pattern agreed to by the relevant institutional group (i.e. informatics peak body);
  # If the record represents data that are derived, or duplicated, from other data (see _About the data : Scenarios giving rise to relationships_) then this relationship should be stored in the collection management system, and communicated within the record using an appropriate method for the data-standard being used to share information (see _About the data : Common patterns in the scenarios_);


=== Aggregator-specific behaviour ===
  # Due to the high likelihood of inconsistency, the data aggregator must not build a single composite record from related records that are determined to be duplicates or constituent parts, without:
    * highlighting the inconsistencies,
    * clearly identifying the provenance of such a record as being the aggregator,
    * not aggregating organisation-specific information (such as _DwC.institutionCode_), or overwriting with aggregator-specific information
  # The aggregator shouldn't fail to ingest a partially complete data set or record when encountering unrecognised terms (fields, concepts) in the source data;
  # The aggregator should use methods (see _About the data : Common patterns in the scenarios_) to discover the existence of related records and clearly offer links to, or notification of, these records;
  # The aggregator could provide a (web?) service that:
    * responds to resource identifiers with a method for accessing the resource itself (freely or securely),
    * responds to the sub-parts of an identifier with best-guess identifier(s) based on current (and historical) patterns used by the relevant institutional group,
    * and potentially, offer the identifiers of related records as part of the response.
  # The aggregator could remember relationships between records, and allow users to navigate this graph;
  # The aggregator could infer relationships between records, and allow users to confirm these, which it would also remember;


=== Changes to the domain-specific extensions ===
*06/12/2011 NOTE:* These recommendations remain are likely to evolve further...

To FCIG-DwC (for more details see _Changes to the FCIG-DwC extension_) :
  # a mechanism to relate a _General_ record to its _principal_ as well as its _parent_ records, one-to-one for a maximum of two relationships, in all forms of dwc (simple, archives and xml);
  # a mechanism to relate a record to other record(s), one-to-many, _n_ relationships, available only in dwc-archives and dwc-xml; _DwC.!ResourceRelationship_ is probably this mechanism - need to ensure it meets the needs;

To HISPID-ABCD (for more details see _Changes to the HISPID specification_) :
  # a mechanism relate a unit record to its _principal_ as well as its _parent_ records, one-to-one for a maximum of two relationships, in all forms of hispid;
  # a mechanism to relate _Unit_-nested multimedia (_MultiMediaObjects_, _SiteImages_) to the specimen _explicitly_ in the data, _i.e._ a _UnitID_ pointer in all of these sub-classes;
  # a mechanism to relate _!SpecimenUnit_-nested _Preparations_ to the specimen _explicitly_ in the data, _i.e._ a _UnitID_ pointer in some/all of the sub-classes;
  # additional metadata for multimedia (_MultiMediaObjects_, _SiteImages_) to communicate date modified (_i.e. current at_) 
  # additional metadata for _Preparations_ to communicate date modified (_i.e. current at_) 

</td>

<td valign="top" align="right" width="33%">
<p> </p><p> </p>
<p><table border="1" cellspacing="0" cellpadding="4"><tr><td>
*Contents:*
<wiki:toc max_depth="2" />
</td></tr></table></p>
</td>

</tr></table>

----

= About the data =


== Core (primary, parent) and supplementary (duplicated, derived, secondary, child) data ==

In the scope of this logic, *core collection data* are generally the data that find themselves at the source of other data (causally). They are distinguishable to *supplementary collection data*, which are usually derived in some way; _e.g._
  * a specimen (core) which is photographed, the photo being stored in a separate system (supplement);
  * a sound-recording (core) is taken in the field, within which sightings are evident (supplement);
  * a specimen (core) is scanned by a service provider with CT equipment (supplement);

The organisational boundary most likely plays a role in the distinction as well; _e.g._
  * the service provider keeps a database of all ct-scans; the specimen's ct-scan (core) is converted to a lower-fidelity .avi file and offerred on their website (supplement);

Suffice it to say, types of data are likely handled in separate (sub-)systems with separate processes for managing them - this point forces us to reconsider some cases; _e.g._
  * a herbarium photographs a preserved specimen (core), the photo then being shared with full metadata to other institutions, those institutions treating this photo as a specimen in its own right (core);

Consideration must also be given to the _[http://code.google.com/p/ala-dataquality/wiki/CompletenessModel completeness]_ ([http://code.google.com/p/ala-dataquality/wiki/CompletenessModel]) of the data stored in sub-system(s) as an aggregate whole, or the ability to draw these data into a whole at the time of export; _e.g._
  * a preserved specimen (core) which then has its skin dried and treated as a separate, but related, specimen in another database (core);
  * a dna sample is taken from a live specimen (core, core) which is then passed on with minimal metadata (supplement) _or full metadata (core)_ to another organisation for barcoding/sequencing;

It seems highly unlikely that any attempt to apply labels to organisations' activities will not bring to light cases that contradict the reasoning used to assign these labels. 

As such, _core_ or _supplementary_ can be considered arbitrary labels used to distinguish the roles data play in relationships, analogous to _parent_ and _child_ respectively, with the latter in both cases implying a subordinate relationship to the former. 

All labels are used interchangeably in this document.


== Scenarios giving rise to relationships ==

The following situations have been encountered to date; they are referred to later when itemising the possible solutions within each specification.

<wiki:gadget url="http://hosting.gmodules.com/ig/gadgets/file/117808631063490062819/url.xml" up_Url="https://docs.google.com/spreadsheet/pub?hl=en_US&key=0AiNWJFdh4pHZdDY2cEgxdHZ5YlBoTUx4MGVfVTgyTGc&hl=en_US&gid=6" up_Title="matrix" up_height=560 width="768" up_refresh=6000 />

_From [http://goo.gl/TdSLD]_


== Common entities in the scenarios ==

*It is the intent of this document to ensure the data provider can communicate duplication whereever possible.*

<wiki:gadget url="http://hosting.gmodules.com/ig/gadgets/file/117808631063490062819/url.xml" up_Url="https://docs.google.com/spreadsheet/pub?hl=en_US&key=0AiNWJFdh4pHZdDY2cEgxdHZ5YlBoTUx4MGVfVTgyTGc&hl=en_US&gid=8" up_Title="matrix" up_height=520 width="768" up_refresh=6000 />

_From [http://goo.gl/TdSLD]_


=== Other collection entities ===
Collectors, sites, localities, collection events, field collections, surveys; in cases where this information is not an attribute of the record, these data are generally related to the others through one of the following methods:
  * explicitly associated through a _[http://en.wikipedia.org/wiki/Foreign_key foreign key - http://en.wikipedia.org/wiki/Foreign_key]_ relationship, _i.e._ a pointer in a specific term within a record, to the unique identifier of another entity; e.g. _DwC.locationID_, _HISPID.XXX_
  * implied through a nested data structure, _i.e._ _HISPID.Unit.MultiMediaObjects.MultiMediaObject_


== Common patterns in the scenarios ==

This section attempts to identify instances of common ground shared amongst the scenarios, i.e. a 'lowest common denominator', with the goal of relating each pattern to a prescribed usage within a particular standard. 

(For some thoughts on how these patterns are identified, see _Appendix: Searching for common patterns in the scenarios_)

<wiki:gadget url="http://hosting.gmodules.com/ig/gadgets/file/117808631063490062819/url.xml" up_Url="https://docs.google.com/spreadsheet/pub?hl=en_US&key=0AiNWJFdh4pHZdDY2cEgxdHZ5YlBoTUx4MGVfVTgyTGc&hl=en_US&gid=1" up_Title="matrix" up_height=405 width="768" up_refresh=6000 />

_From [http://goo.gl/TdSLD]_


----

= Standards-specific usage patterns =

== Introduction ==

It is the intent of this proposal to define consistent methods for communicating relationships between records; in all cases, the following design-constraints are considered:
  # be flexible but solve the problem, and accept that there are multiple solutions - let the data provider choose the best fit;
  # use the existing standard terms where ever possible, unless the use of these terms in this manner would cause a conflict with the general understanding and/or current practice;
  # add terms only when the following conditions are met:
    # the term name is defined which at least hints at the purpose (_yes, this is purely subjective - but if a number of people agree that the naming makes sense, then that's the best that can be hoped for at this stage_)
    # the term's usage is unambiguously defined in a short description


== Backwards compatibility ==

For true 'backwards compatibility', the newer (extended) version of records must conjur the same behaviour in consuming applications as the earlier version would have.

*One assumption must be made in this regard:* that the data consumer ignores unrecognised fields instead of calling a halt to the load process, or, at worst case, drops this particular record as 'an error'. Ideally, unrecognised fields would be ignored.

In most cases this is possible, however, in some instances where relationships between duplicate records are not clearly defined then multiple 'dots on the map' will appear. It is the hope that in the future some mechanism exists to mine for, seek validation and then remember these relationships - see _Appendix: Relationship mining sub-system (The Relator)_ for more information.


== !DarwinCore usage patterns ==

*06/12/2011 NOTE: this section is still being pulled together*

=== DwC synopsis for communicating relationships ===
<wiki:gadget url="http://hosting.gmodules.com/ig/gadgets/file/117808631063490062819/url.xml" up_Url="https://docs.google.com/spreadsheet/pub?hl=en_US&key=0AiNWJFdh4pHZdDY2cEgxdHZ5YlBoTUx4MGVfVTgyTGc&hl=en_US&gid=10" up_Title="matrix" up_height=840 width="768" up_refresh=6000 />

_From [http://goo.gl/TdSLD]_

=== DwC analysis ===

==== Sample usage of _principal-_ and _parentRecord_ ====

==== Sample usage of _!ResourceRelationship_ ====


== HISPID5 usage patterns ==

*06/12/2011 NOTE: this section is still being pulled together*

_Specimen / Image Relationships with HISPID 5_ :
  * [http://goo.gl/50KhE http://goo.gl/50KhE]
  * [https://docs.google.com/document/d/1bJYvz0AXT-O1iiJUs-ongmngTAhDiMfrJD2vu_5lmmM/edit?hl=en_US https://docs.google.com/document/d/1bJYvz0AXT-O1iiJUs-ongmngTAhDiMfrJD2vu_5lmmM/edit?hl=en_US]

=== HISPID synopsis for communicating relationships ===
<wiki:gadget url="http://hosting.gmodules.com/ig/gadgets/file/117808631063490062819/url.xml" up_Url="https://docs.google.com/spreadsheet/pub?hl=en_US&key=0AiNWJFdh4pHZdDY2cEgxdHZ5YlBoTUx4MGVfVTgyTGc&hl=en_US&gid=12" up_Title="matrix" up_height=840 width="768" up_refresh=6000 />

_From [http://goo.gl/TdSLD]_

=== HISPID analysis ===
This section looks at the problem from the hispid perspective; this is what i want to do in hispid - what cases does it apply to? Here is a crude glossary:

  * images - read ‘multimedia’; the assumption is that these are at least indexed in digital form somewhere (with appropriate metadata to find the object, if the image itself has not been digitised);
  * storage mechanism - the database (/filestore/card-file...) that holds the data;
  * 'separate storage mechanisms' imply a challenge in integrating the data; some types of the impediments encountered so far are a lack of technical capability, a physical separation & a temporal separation;
  * _Unit_ - 
  * _!SiteImage_ (SI for short) - [http://wiki.tdwg.org/twiki/bin/view/ABCD/AbcdConcept1138 DataSets/DataSet/Units/Unit/Gathering/SiteImages/SiteImage http://wiki.tdwg.org/twiki/bin/view/ABCD/AbcdConcept1138]
  * _!MultiMediaObject_, (MMO for short) - [http://wiki.tdwg.org/twiki/bin/view/ABCD/AbcdConcept0772 DataSets/DataSet/Units/Unit/MultiMediaObjects/MultiMediaObject http://wiki.tdwg.org/twiki/bin/view/ABCD/AbcdConcept0772]
  * _SpecimenUnit_ - a specialisation of _Unit_ - [http://wiki.tdwg.org/twiki/bin/view/ABCD/AbcdConcept0404 DataSets/DataSet/Units/Unit/SpecimenUnit http://wiki.tdwg.org/twiki/bin/view/ABCD/AbcdConcept0404]

==== _!SpecimenUnit_ record with nested _!SiteImage_ record(s) ====

==== _!SpecimenUnit_ record with nested _!MultiMediaObject_ record(s) ====

==== _!MultiMediaObject_/_!SiteImage_ record stands alone, from which sighting (specimen?) records are interpolated ====

HISPID would allow for this but each inferred _!SpecimenUnit_ record must have a nested MMO/SI record - in turn, each MMO/SI record would be a redundant copy of the other(s), with all the MMO/SI records sharing the same identifier.

==== An image collection item is treated like more traditional specimen(s); this image may be related to other more traditional specimen(s) ====

In this case, the image is the _!SpecimenUnit_; it may be a duplicate, or derivation, of other SpecimenUnit(s); it has nested _!MultiMediaObject(s)_ to point to the image where it resides (usage pattern 1).

    The image may be managed in a digital asset management system (DAMS) or it might be simply a file sent on the email from another institution.
    It may be desirable as the aggregator to keep both source records (the whole may be equal to or greater than the sum of the parts); however, in this case, the relationship between both records must be maintained.


==== _!SpecimenUnit_ record and _!MultiMediaObject_ / _!SiteImage_ record stand alone but share a 1:1 relationship ====

'separate storage mechanisms' imply some challenge in integrating the data; up until this point, it is assumed that the data provider will be able to build an aggregate SpecimenUnit record at the time of export, when they are communicating imagery associated with the specimen;

some types of the impediments to this 'just-in-time aggregation' that have been encountered so far are a lack of technical capability, a physical separation & a temporal separation;

_!MultiMediaObject_ or _!SiteImage_ records are nested under _Unit_ (spec suggests that MMO/SI is part of unit); however, MMO/SI has no way of communicating explicitly that it belongs to _!Unit_ - without this mechanism, each of these types of records could not exist in separate files, yet still maintain their relationship;

this usage pattern doesn’t appear to be supported by hispid as it stands; we would need to add a term to MMO/SI to point to its related _!Unit_ - so it is anticipated that the main users of such a mechanism would have a need to communicate _!SpecimenUnit_ records completely separately  to their image records, yet have a desire that these be related.


----


= Common concepts in proposed specification changes =


== Preparations versus basis of record ==
  * The concepts 'basis of record' (DwC: _basisOfRecord_ + _dcterms:type_; HISPID: _!KindOfUnit_ + _!RecordBasis_) and 'specimen preparations' (DwC: _preparations_; HISPID: _Preparations_) are metadata.
  * In HISPID/ABCD, _Preparations_ are nested under _!SpecimenUnit_ 
  * source data – does each record represent a preparation? or are all preparations for a principal collection item aggregated into the one record?


== The principal record ==

The identifier assigned to the physical item that was _"accessioned into a collection from the field"_ (eg. single vouchered specimen, still image, movie or sound recording, field notes, core sample, phial of multiple organisms, etc.). 

The principal record may be associated with many occurrence records, each with a unique occurrenceId (eg. an image or sound recording containing determinations for many species) as well as derivative records such as gene sequences representing a part of the physical item (eg. leg of spider), or unique records representing different layers of a core sample, etc.

Examples of cases: 
  * downstream preparations/processing of specimens, such as a dna sequence, or a skin preservation, etc. would use this term to 'point back to the originating specimen' 
  * a record of a taxon in multimedia (hosting many taxa) would point to the accessioned collection item, e.g. a sound recording of one or more species, or a photo of an apparent symbiotic relationship (although in this case, "associated taxa" or "associated occurrences" might be more appropriate if the nature of the relationship can be more specifically defined)


== The parent record ==

if the principal record is more than one step removed from this one, you can use this term to communicate the direct parent-child relationship between these two items (_see principal record for more detailed information_)


== Relation types: principal and parent ==

This term communicates each type of relationship. Recommended best practice is to use a controlled vocab. (*note: vocab to be determined*) _e.g._ image, sighting, duplicate, donation, ...


== Relation Id terms: principal and parent ==

This term communicates where source data for _principal-_ and _parentRecord_ exist in those record(s), _i.e._ under what term should the data consumer search if they wished to find this _principal-_ or _parentRecord_? 

Recommended best practice is to use one of the standard dwc term names used to identify a record, e.g. _occurrenceId_, _catalogNumber_ (,_eventId_, _locationId_, ...)


----


= Changes to the FCIG-DwC extension =

To FCIG-DwC; after community consultation, ALA to propose for ratification+inclusion in DwC :
  # a mechanism to relate a _General_ record to its _principal_ as well as its _parent_ records, one-to-one for a maximum of two relationships, in all forms of dwc (simple, archives and xml):
    # add _principalRecord_ to _Record_
    # add _principalRelationType_ to _Record_
    # add _principalRelIdTerm_ to _Record_
    # add _parentRecord_ to _Record_
    # add _parentRelationType_ to _Record_
    # add _parentRelIdTerm_ to _Record_
  # In addition to these terms being added, ensure sufficiency of _!ResourceRelationship_ to communicate the multiple relationships described previously

== _DwC.!ResourceRelationship_ ==

appears to be a logical class used to relate _Record_ entities with others; allows for _n_ number of nested (constituent, singular) 'association' entities.

each relationship must have the following attributes:
  * core (parent, primary) identifier value;
  * core (parent, primary) identifier source term;
  * supplementary (child, subordinate) identifier value;
  * supplementary (child, subordinate) source term;
  * relationship type;
  * ...

... more to follow on this one

== Consideration to the existing DwC standard ==

While being discounted as a preferred way of communicating relationships, all of these are viable mechanisms for relationship mining - see _Appendix: Relationship mining sub-system (The Relator)_ for more information.

=== _occurrenceId_ to relate records ===
  * relationship is implied
  * usage pattern likely to be unintuitive and contradictory to existing practice
  * the water in this pool is already muddy...

=== _catalogNumber_ to relate records ===
  * viable option, but relationship is still implied

=== _associatedOccurrences_ to relate records ===
  * spec is worded such that i believe the intent here is to define familial/individual's relationships;
  * still a viable option, but would need to specialise the meaning of this term (& related terms) in the fcig domain

=== _associatedTaxa_ to relate records ===
  * spec is worded such that the intent here is to define symbiotic  relationships;
  * this term could be overloaded to 


----


= Changes to the HISPID specification =

To HISPID-ABCD :
  # a mechanism to relate a _Unit_ record to its _principal_ as well as its _parent_ records, one-to-one for a maximum of two relationships, in all forms of hispid;
    # add _principalUnitID_ to _Unit_
    # add _principalRelationType_ to _Unit_
    # add _principalRelIdTerm_ to _Unit_
    # add _parentUnitID_ to _Unit_
    # add _parentRelationType_ to _Unit_
    # add _parentRelIdTerm_ to _Unit_
  # a mechanism to relate _Unit_-nested multimedia (_MultiMediaObjects_, _SiteImages_) to the specimen _explicitly_ in the data, _i.e._ a _UnitID_ pointer in these sub-classes;
    # add _relatedUnitID_ to _MultiMediaObject_ and _SiteImage_; in these cases, the type of relationships are implied
  # additional metadata for multimedia (_MultiMediaObjects_, _SiteImages_) to communicate date modified (_i.e. current at_) information;
    # add _dateModified_ to _MultiMediaObject_ and _SiteImage_


----


= Appendices =

== Appendix: Relevance to different biodiversity domains ==

This document is relevant to a number of different groups sharing biodiversity information. The boundaries may be :
  * historical (or traditional), 
  * along taxonomic lines (or other taxa classification methodology),
  * focussed on activities of the organisations within the group (i.e. areas of expertise),
  * any or all of the above!

|| *Domain* || *Description of focus* || *Data sharing standard* || 
|| FCIG || Faunal collections || Darwincore csv (simple-dwc) with non-standard domain extensions to be proposed to TDWG, and maintained by FCIG || 
|| HISCOM || Herbaria || HISPID5: hispid-xml and 'hispid-light' || 
|| Microbial collections || Darincore archive (dwc-a) with domain extensions based on ITF2 standard<br>hispid  || 
|| Barcoding & sequencing || Darwincore csv (simple-dwc) || with non-standard extensions || 
|| Living collections || Darwincore csv (simple-dwc) || with domain extensions based on ITF2 standard || 


== Appendix: URNs as record identifiers ==

Uniform resource names (URNs) are textual data intended for use as identifiers of other data or services (resources), and display the following attributes:
  * They must follow a certain pattern and contain information identifying the custodian of the resource (the namespace), as well as the resource itself (the name).
  * Patterns that URNs follow must be predictable, so data users can derive them from information they may already have (if they don't have the URN itself).
  * URNs must remain consistent (i.e. always point to the same thing).
  * URNs are defined by the data custodian, and may follow a pattern or rules specified by the custodian or a broader affiliation of custodians (e.g. a biodiversity domain).
  * URNs need not be 'doled out by a central repository' although some namespaces or broader groupings do this as part of a standard.
  * Given only an identifier, a data user should be able to find more information from someone or something about the resource itself (if not the resource).

== Appendix: LSIDs ==
GJR's section

For the purposes of this document, LSIDs are synonymous with URNs??
=== Structure of, pattern rules ===
=== Basis of record contained within LSID ===
=== Historical mappings to earlier patterns ===

== LSID responder (URN resolution) ==
For the purposes of this document, LSIDs are synonymous with URNs??
==== Intended behaviour ====
==== Output ====
==== Multiple matches to a LSID ====


== Appendix: Searching for common patterns in the scenarios ==

The section _About the data : Common patterns in the scenarios_ attempts to identify instances of common ground shared amongst the scenarios, _i.e._ a 'lowest common denominator', with the goal of relating each pattern to a prescribed usage within a particular standard.

A standing assumption: relationships between records are captured in the data management processes, and are evident in the source data.

=== A little about patterns ===
A pattern can be thought of as a generic method for solving a particular problem. It doesn't delve into specifics per se, rather, defines the requirements for a solution.

It is then up to the implementation to ensure the requirements are met within its own context (_more info: [http://en.wikipedia.org/wiki/Design_pattern_%28computer_science%29]_).

It could be said that the scenarios themselves are actually instances of a particular solution to a problem, each within a given context and/or domain. A solution exists within its source-system's boundaries, generating and/or capturing data relevant to its activities - this forms part of your operational data store.

=== Why bother identifying these patterns? ===
When it comes time to map these data to a standard form, we must ensure the relationship information continues to be discoverable in an explicit manner: at the business end, we need a way to handle each of the 'common denominators' in each of the data standards we are referring to in this document.

In addition to this, it is with some certainty that scenarios will arise that are not in the above list; however, a method for solving that problem will have already been defined.

Some of these methods will be applicable to the specifications as they stand, and others will require a currently non-standard solution. This is clearly defined in _Standards-specific usage patterns_.

=== More on relationships ===
In database parlance, the _cardinality_ of a particular relationship is defined in a handful of ways:  one-to-one, one-to-many (/many-to-one) and many-to-many (_see [http://en.wikipedia.org/wiki/Cardinality_%28data_modeling%29 http://en.wikipedia.org/wiki/Cardinality_%28data_modeling%29]_).

The right choice depends on the process and data being captured; but the method employed to communicate these will likely differ even within the same circumstance. 


== Appendix: Embedding a google docs spreadsheet in a wiki page ==

In your google docs spreadsheet: *File* menu -> *Publish to the web*; then click *Start publishing*; then scroll down to _Get a link..._ and choose *Web page* from the drop-down menu; finally, copy the url from the text box - you will need this url in the wiki markup that follows...

In the wiki markup (customising the following code to suit your specific case)...
{{{
<wiki:gadget url="http://hosting.gmodules.com/ig/gadgets/file/117808631063490062819/url.xml" up_Url="https://docs.google.com/spreadsheet/pub?hl=en_US&hl=en_US&key=0AiNWJFdh4pHZdDY2cEgxdHZ5YlBoTUx4MGVfVTgyTGc&single=true&gid=0&output=html" up_Title="matrix" up_height=360 width="97%" up_refresh=6000 />
}}}

_I noticed some funny business in firefox 7 with no-script under windows 7, which was resolved by 'allowing' the gmodules.com domain_